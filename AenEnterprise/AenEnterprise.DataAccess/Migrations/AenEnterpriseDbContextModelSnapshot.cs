// <auto-generated />
using System;
using AenEnterprise.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AenEnterprise.DataAccess.Migrations
{
    [DbContext(typeof(AenEnterpriseDbContext))]
    partial class AenEnterpriseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AenEnterprise.DomainModel.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Plate"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brass"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AnnualRevenue")
                        .HasColumnType("decimal")
                        .HasColumnName("AnnualRevenue");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyAddress");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyEmail");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyPhone");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiryDate");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FullName");

                    b.Property<DateTime>("IncorporationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IncorporationDate");

                    b.Property<string>("IndustryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IndustryType");

                    b.Property<string>("InvoiceAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InvoiceAddress");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsMultipleWareHouse")
                        .HasColumnType("bit")
                        .HasColumnName("IsMultipleWareHouse");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit")
                        .HasColumnName("IsPrimary");

                    b.Property<bool>("IsPubliclyListed")
                        .HasColumnType("bit")
                        .HasColumnName("IsPubliclyListed");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RegistrationNumber");

                    b.Property<string>("TaxIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TaxIdentifier");

                    b.Property<string>("VATAreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VATAreaCode");

                    b.Property<string>("VATCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VATCode");

                    b.Property<string>("WebPageAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WebPageAddress");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnnualRevenue = 1000000.00m,
                            CompanyAddress = "123 Sample St",
                            CompanyEmail = "company@example.com",
                            CompanyPhone = "123-456-7890",
                            Country = "Sample Country",
                            CreatedDate = new DateTime(2019, 3, 10, 11, 1, 41, 112, DateTimeKind.Local).AddTicks(8926),
                            ExpiryDate = new DateTime(2029, 3, 10, 11, 1, 41, 112, DateTimeKind.Local).AddTicks(8928),
                            FullName = "Full Name",
                            IncorporationDate = new DateTime(2019, 3, 10, 11, 1, 41, 112, DateTimeKind.Local).AddTicks(8902),
                            IndustryType = "Sample Industry",
                            InvoiceAddress = "456 Invoice St",
                            IsDeleted = false,
                            IsMultipleWareHouse = true,
                            IsPrimary = true,
                            IsPubliclyListed = false,
                            Name = "Company B",
                            RegistrationNumber = "123456789",
                            TaxIdentifier = "TAX123",
                            VATAreaCode = "Area-123",
                            VATCode = "VAT-123",
                            WebPageAddress = "www.company.com"
                        },
                        new
                        {
                            Id = 2,
                            AnnualRevenue = 1000000.00m,
                            CompanyAddress = "123 Sample St",
                            CompanyEmail = "company@example.com",
                            CompanyPhone = "123-456-7890",
                            Country = "Sample Country",
                            CreatedDate = new DateTime(2019, 3, 10, 11, 1, 41, 112, DateTimeKind.Local).AddTicks(8941),
                            ExpiryDate = new DateTime(2029, 3, 10, 11, 1, 41, 112, DateTimeKind.Local).AddTicks(8943),
                            FullName = "Full Name",
                            IncorporationDate = new DateTime(2019, 3, 10, 11, 1, 41, 112, DateTimeKind.Local).AddTicks(8939),
                            IndustryType = "Sample Industry",
                            InvoiceAddress = "456 Invoice St",
                            IsDeleted = false,
                            IsMultipleWareHouse = true,
                            IsPrimary = true,
                            IsPubliclyListed = false,
                            Name = "Company A",
                            RegistrationNumber = "123488796",
                            TaxIdentifier = "TAX123",
                            VATAreaCode = "Area-123",
                            VATCode = "VAT-123",
                            WebPageAddress = "www.company.com"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Dhaka",
                            CreatedDate = new DateTime(2024, 3, 10, 11, 1, 41, 115, DateTimeKind.Local).AddTicks(9038),
                            Description = "This is Plate Customer",
                            MobileNo = "01887969696",
                            Name = "Alam"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Dhaka",
                            CreatedDate = new DateTime(2024, 3, 10, 11, 1, 41, 115, DateTimeKind.Local).AddTicks(9054),
                            Description = "This is Brass Customer",
                            MobileNo = "01887969696",
                            Name = "Shamim Enterprise"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Chittagong",
                            CreatedDate = new DateTime(2024, 3, 10, 11, 1, 41, 115, DateTimeKind.Local).AddTicks(9056),
                            Description = "This is Plate Customer",
                            MobileNo = "01887969696",
                            Name = "Shahab Uddin"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.EmployeeManagement.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Address");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DateOfBirth");

                    b.Property<DateTime>("DateOfExpiry")
                        .HasColumnType("date")
                        .HasColumnName("DateOfExpiry");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Department");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EmployeeCode");

                    b.Property<string>("Favourite")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Favourite");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Gender");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("HairColor");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Height");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("HireDate");

                    b.Property<string>("IdentificationMark")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IdentificationMark");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MaritalStatus");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nationality");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PhoneNumber");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Salary");

                    b.Property<string>("TAXIDNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TAXIDNo");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Age = "",
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfExpiry = new DateTime(2029, 3, 10, 11, 1, 41, 109, DateTimeKind.Local).AddTicks(4391),
                            Department = "IT",
                            Email = "john@example.com",
                            EmployeeCode = "EMP001",
                            Favourite = "",
                            FirstName = "John",
                            Gender = "Male",
                            HairColor = "",
                            Height = "",
                            HireDate = new DateTime(2022, 3, 10, 11, 1, 41, 109, DateTimeKind.Local).AddTicks(4290),
                            IdentificationMark = "",
                            LastName = "Doe",
                            MaritalStatus = "",
                            Nationality = "",
                            PhoneNumber = "1234567890",
                            Salary = 50000.00m,
                            TAXIDNo = "",
                            Weight = ""
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Age = "",
                            DateOfBirth = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfExpiry = new DateTime(2028, 3, 10, 11, 1, 41, 109, DateTimeKind.Local).AddTicks(4404),
                            Department = "HR",
                            Email = "jane@example.com",
                            EmployeeCode = "EMP002",
                            Favourite = "",
                            FirstName = "Jane",
                            Gender = "Female",
                            HairColor = "",
                            Height = "",
                            HireDate = new DateTime(2021, 3, 10, 11, 1, 41, 109, DateTimeKind.Local).AddTicks(4402),
                            IdentificationMark = "",
                            LastName = "Smith",
                            MaritalStatus = "",
                            Nationality = "",
                            PhoneNumber = "9876543210",
                            Salary = 60000.00m,
                            TAXIDNo = "",
                            Weight = ""
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<string>("WorkShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Increament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Increaments");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Leave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplyingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysOfLeave")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LeaveTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceDuringLeave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForLeave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Allowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DaysAbsent")
                        .HasColumnType("int");

                    b.Property<int>("DaysPresent")
                        .HasColumnType("int");

                    b.Property<decimal>("Deductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<DateTime>("MonthYear")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalaryPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalWorkDays")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Inventory.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address1");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address2");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CostingMethodId")
                        .HasColumnType("int")
                        .HasColumnName("CostingMethodId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNo");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address1 = "123 Main St",
                            Address2 = "",
                            CostingMethodId = 1,
                            Description = "Warehouse A description",
                            EmployeeId = 1,
                            Name = "Warehouse A"
                        },
                        new
                        {
                            Id = 2,
                            Address1 = "456 Elm St",
                            Address2 = "",
                            CostingMethodId = 2,
                            Description = "Warehouse B description",
                            EmployeeId = 2,
                            Name = "Warehouse B"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.InventoryManagement.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.InventoryManagement.StockItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentStockQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NewStockQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseItemId");

                    b.ToTable("StockItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal")
                        .HasColumnName("CostPrice");

                    b.Property<string>("DefaultVatPercent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DefaultVatPercent");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool?>("FixedAsset")
                        .HasColumnType("bit")
                        .HasColumnName("FixedAsset");

                    b.Property<string>("InventoryType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InventoryType");

                    b.Property<bool?>("IsConsumable")
                        .HasColumnType("bit")
                        .HasColumnName("IsConsumable");

                    b.Property<bool?>("IsInventoryRequired")
                        .HasColumnType("bit")
                        .HasColumnName("IsInventoryRequired");

                    b.Property<bool?>("IsPurchaseable")
                        .HasColumnType("bit")
                        .HasColumnName("IsPurchaseable");

                    b.Property<bool?>("IsQuantityMeasureable")
                        .HasColumnType("bit")
                        .HasColumnName("IsQuantityMeasureable");

                    b.Property<bool?>("IsSaleable")
                        .HasColumnType("bit")
                        .HasColumnName("IsSaleable");

                    b.Property<decimal?>("MRP")
                        .HasColumnType("decimal")
                        .HasColumnName("MRP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal")
                        .HasColumnName("PurchasePrice");

                    b.Property<bool?>("RawMaterials")
                        .HasColumnType("bit")
                        .HasColumnName("RawMaterials");

                    b.Property<decimal?>("TradePrice")
                        .HasColumnType("decimal")
                        .HasColumnName("TradePrice");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("UnitId");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("WarehouseId");

                    b.Property<decimal?>("WholesalePrice")
                        .HasColumnType("decimal")
                        .HasColumnName("WholesalePrice");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CompanyId = 1,
                            CostPrice = 18.0m,
                            DefaultVatPercent = "10%",
                            Description = "Description1",
                            FixedAsset = false,
                            InventoryType = "Type1",
                            IsConsumable = false,
                            IsInventoryRequired = true,
                            IsPurchaseable = true,
                            IsQuantityMeasureable = true,
                            IsSaleable = true,
                            MRP = 30.0m,
                            Name = "6/8 Plate",
                            PurchasePrice = 20.0m,
                            RawMaterials = false,
                            TradePrice = 22.0m,
                            UnitId = 1,
                            WarehouseId = 1,
                            WholesalePrice = 25.0m
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.PurchaseManagement.PurchaseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("UnitId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.PurchaseManagement.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DeliveryOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("DeliveryOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DeliveryOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeliveryOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DispatchAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DispatchQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullyApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartiallyApproved")
                        .HasColumnType("bit");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryOrderId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("StatusId");

                    b.ToTable("DeliveryOrderItem");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DispatchItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DispatchAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DispatchOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("DispatchQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullyApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartiallyApproved")
                        .HasColumnType("bit");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("VehicalEmptyWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VehicalLoadWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VehicalNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DispatchOrderId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("StatusId");

                    b.ToTable("DispatchItem");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DispatcheOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryOrderId")
                        .HasColumnType("int");

                    b.Property<string>("DispatcheNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryOrderId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("DispatchOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeliveryQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoiceQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullyApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartiallyApproved")
                        .HasColumnType("bit");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("StatusId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvoicedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvoicedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullyApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartiallyApproved")
                        .HasColumnType("bit");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderItemNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesOrderId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UnitId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryPlane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesOrderStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesOrderStatusId");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.SalesOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesOrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CreateSalesOrder"
                        },
                        new
                        {
                            Id = 2,
                            Name = "PendingApprovalOrder"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ApprovedSalesOrder"
                        },
                        new
                        {
                            Id = 4,
                            Name = "CreateInvoice"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ApprovedInvoice"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CreateDO"
                        },
                        new
                        {
                            Id = 7,
                            Name = "ApprovedDO"
                        },
                        new
                        {
                            Id = 8,
                            Name = "CreateDispatcheAndDone"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Reject"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rejected"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "KG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lot"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SupplierManagement.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceBefore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.UserDomain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "",
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.UserDomain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Branch", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Attendance", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.EmployeeManagement.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Department", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.EmployeeManagement.Employee", "Employee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Increament", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.EmployeeManagement.Employee", "Employee")
                        .WithMany("Increaments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Leave", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.EmployeeManagement.Employee", "Employee")
                        .WithMany("Leaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.HRDomain.Salary", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.EmployeeManagement.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Inventory.Warehouse", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Company", null)
                        .WithMany("Warehouses")
                        .HasForeignKey("CompanyId");

                    b.HasOne("AenEnterprise.DomainModel.EmployeeManagement.Employee", "Employee")
                        .WithMany("Warehouses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.InventoryManagement.Stock", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.PurchaseManagement.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Stocks")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.Inventory.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.InventoryManagement.StockItem", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.PurchaseManagement.PurchaseItem", "PurchaseItem")
                        .WithMany("StockItems")
                        .HasForeignKey("PurchaseItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseItem");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Product", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Category", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.Inventory.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Company");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.PurchaseManagement.PurchaseItem", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Product", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.PurchaseManagement.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Unit", "Unit")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.PurchaseManagement.PurchaseOrder", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SupplierManagement.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DeliveryOrder", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Invoice", "Invoice")
                        .WithMany("DeliveryOrders")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.SalesOrder", "SalesOrder")
                        .WithMany("DeliveryOrders")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DeliveryOrderItem", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.DeliveryOrder", "DeliveryOrder")
                        .WithMany("DeliveryOrderItem")
                        .HasForeignKey("DeliveryOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.OrderItem", "OrderItem")
                        .WithMany("DeliveryOrderItems")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Status", "Status")
                        .WithMany("DeliveryOrderItems")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DeliveryOrder");

                    b.Navigation("OrderItem");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DispatchItem", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.DispatcheOrder", "DispatchOrder")
                        .WithMany("DispatchItems")
                        .HasForeignKey("DispatchOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.OrderItem", "OrderItem")
                        .WithMany("DispatchItems")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Status", "Status")
                        .WithMany("DispatchItems")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DispatchOrder");

                    b.Navigation("OrderItem");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DispatcheOrder", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.DeliveryOrder", "DeliveryOrder")
                        .WithMany("DispatcheOrders")
                        .HasForeignKey("DeliveryOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Invoice", "Invoice")
                        .WithMany("DispatcheOrders")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.SalesOrder", "SalesOrder")
                        .WithMany("DispatcheOrders")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DeliveryOrder");

                    b.Navigation("Invoice");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Invoice", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.SalesOrder", "SalesOrder")
                        .WithMany("Invoices")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.InvoiceItem", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Status", "Status")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("OrderItem");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.OrderItem", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.SalesOrder", "SalesOrder")
                        .WithMany("OrderItems")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Status", "Status")
                        .WithMany("OrderItems")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.Unit", "Unit")
                        .WithMany("OrderItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SalesOrder");

                    b.Navigation("Status");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.SalesOrder", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.Customer", "Customer")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AenEnterprise.DomainModel.SalesManagement.SalesOrderStatus", "SalesOrderStatus")
                        .WithMany("SalesOrders")
                        .HasForeignKey("SalesOrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesOrderStatus");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Transaction", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.UserDomain.User", b =>
                {
                    b.HasOne("AenEnterprise.DomainModel.UserDomain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Company", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Customer", b =>
                {
                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.EmployeeManagement.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Departments");

                    b.Navigation("Increaments");

                    b.Navigation("Leaves");

                    b.Navigation("Salaries");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Inventory.Warehouse", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.PurchaseManagement.PurchaseItem", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.PurchaseManagement.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseItems");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DeliveryOrder", b =>
                {
                    b.Navigation("DeliveryOrderItem");

                    b.Navigation("DispatcheOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.DispatcheOrder", b =>
                {
                    b.Navigation("DispatchItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Invoice", b =>
                {
                    b.Navigation("DeliveryOrders");

                    b.Navigation("DispatcheOrders");

                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.OrderItem", b =>
                {
                    b.Navigation("DeliveryOrderItems");

                    b.Navigation("DispatchItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.SalesOrder", b =>
                {
                    b.Navigation("DeliveryOrders");

                    b.Navigation("DispatcheOrders");

                    b.Navigation("Invoices");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.SalesOrderStatus", b =>
                {
                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Status", b =>
                {
                    b.Navigation("DeliveryOrderItems");

                    b.Navigation("DispatchItems");

                    b.Navigation("InvoiceItems");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SalesManagement.Unit", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.SupplierManagement.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("AenEnterprise.DomainModel.UserDomain.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
